name: Playwright Tests
on:
  pull_request:
    branches: [ master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

env:
  GH_TOKEN: ${{ secrets.GithubCliToken }}

jobs:
  e2e-test:
    name: e2e-test
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.41.0-jammy
    # services:
    #   redis:
    #     image: redis
    #     options: >-
    #         --health-cmd "redis-cli ping"
    #         --health-interval 10s
    #         --health-timeout 5s
    #         --health-retries 5
#      elastisearch:
#        image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
#        env:
#            discovery.type: single-node
#        volumes:
#            - esdata1:/usr/share/elasticsearch/data:rw
#        options:
#            --health-cmd "curl http://localhost:9200/_cluster/health"
#            --health-interval 10s
#            --health-timeout 30s
#            --health-retries 10
#        ports:
#        - 9200:9200
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [ 1, 2]
        shardTotal: [ 2 ]
    steps:
#      - run: curl -X GET http://localhost:9200/_cluster/health
      - uses: actions/checkout@v4
      - run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}

      - name: Upload playwright blob report to Artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: blob-report
          path: blob-report
          retention-days: 30

      - name: Upload nyc report row data to Artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: e2e_nyc_output
          path: e2e_nyc_output
          retention-days: 30

      - name: Upload current run allure result to Artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: allure-result
          path: allure-results
          retention-days: 30

  playwright-html-report:
    name: Playwright HTML Report
    needs: [ e2e-test ]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci

      - name: Download playwright blob report from Previous job(s)
        uses: actions/download-artifact@v3
        with:
          name: blob-report
          path: blob-report

      - name: Generate playwright report
        run: npm run playwright-report

      - name: Upload playwright html report to Artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 30

  coverage-html-report:
    name: Coverage HTML Report
    needs: [ e2e-test ]
    if: always()
    runs-on: ubuntu-latest
    # because NYC generate report with absolute path of source code mapping.
    # We have to use same runner as report generated in above jobs
    container:
      image: mcr.microsoft.com/playwright:v1.41.0-jammy
    steps:
      - uses: actions/checkout@v4

      - name: Download nyc report row data from Previous job(s)
        uses: actions/download-artifact@v3
        with:
          name: e2e_nyc_output
          path: e2e_nyc_output

      - name: Generate coverage report
        run: npm run coverage-report

      - name: Upload playwright code coverage to Artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: coverage-e2e
          path: coverage-e2e
          retention-days: 30

  playwright-allure-report:
    # GitHub CLI is not available in playwright image container, so this needs a seperated job
    name: playwright-allure-report
    needs: [ e2e-test ]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup JDK
        uses: actions/setup-java@v4.2.1
        with:
          distribution: 'microsoft'
          java-version: '21'

      - name: Install dependencies
        run: npm ci

      - name: Download current run allure report from e2e test job
        uses: actions/download-artifact@v3
        with:
          name: allure-result          # the artifact name uploaded
          path: allure-results         # the folder name where artifact will be downloaded to

      - name: Fetch previous Playwright run
        id: previous_playwright_run_id
        run: echo "run_id=$(gh run list -w 'Playwright Tests' -s completed -L 1 --json databaseId --jq '.[].databaseId')" >> $GITHUB_OUTPUT

      - name: Download allure report from previous run
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GithubCliToken }}
          run-id: ${{ steps.previous_playwright_run_id.outputs.run_id }}
          name: allure-report          # the artifact name uploaded
          path: previous-allure-report # the folder name where artifact will be downloaded to

      - name: Copy historical data into current run
        run: cp previous-allure-report/history allure-results/history -r

      - name: Generate allure report
        run: npx allure generate allure-results

      - name: Upload allure report to Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-report
          path: allure-report
          retention-days: 30

  upload-all-report:
    name: upload-allure-and-playwright-report
    needs: [ playwright-html-report, coverage-html-report ]
    if: always()
    runs-on: ubuntu-latest
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Pages
        if: always()
        uses: actions/configure-pages@v4

      - name: Download playwright html from current run to all-report folder
        id: download_playwright_html_report
        uses: actions/download-artifact@v3
        with:
          name: playwright-report
          path: all-report/playwright-report

      - name: Download coverage report from current run to all-report folder
        id: download_coverage_report
        uses: actions/download-artifact@v3
        with:
          name: coverage-e2e
          path: all-report/coverage-e2e

      - name: Download allure report from current run to all-report folder
        id: download_allure_report
        uses: actions/download-artifact@v3
        with:
          name: allure-report
          path: all-report/allure-report

      - name: Upload all report to github-pages
        if: steps.download_playwright_html_report.outcome == 'success' && steps.download_coverage_report.outcome == 'success' && steps.download_allure_report.outcome == 'success'
        uses: actions/upload-pages-artifact@v3
        with:
          path: all-report

      - name: Deploy all report to Github Pages
        if: always()
        id: deploy-all-report-to-github
        uses: actions/deploy-pages@v4
        with:
          preview: true

      - name: update job summary
        if: always()
        run: echo "# Deployed all report to ${{ steps.deploy-all-report-to-github.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
