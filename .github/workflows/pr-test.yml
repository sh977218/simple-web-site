name: pr tests
on:
  pull_request:
    branches: [ master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

env:
  GH_TOKEN: ${{ secrets.GithubCliToken }}

jobs:
#  e2e-test:
#    name: e2e-test
#    runs-on: ubuntu-latest
#    container:
#      image: mcr.microsoft.com/playwright:v1.41.0-jammy
#    strategy:
#      fail-fast: false
#      matrix:
#        shardIndex: [ 1, 2]
#        shardTotal: [ 2 ]
#    steps:
#      - uses: actions/checkout@v4
#      - run: npm i
#
#      - name: Install Playwright Browsers
#        run: npx playwright install --with-deps
#
#      - name: Run Playwright tests
#        run: npx playwright test --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
#
#      - name: Upload playwright blob report to Artifacts
#        uses: actions/upload-artifact@v3
#        if: always()
#        with:
#          name: blob-report
#          path: blob-report
#          retention-days: 30
#
#      - name: Upload nyc report row data to Artifacts
#        uses: actions/upload-artifact@v3
#        if: always()
#        with:
#          name: e2e_nyc_output
#          path: e2e_nyc_output
#          retention-days: 30
#
#      - name: Upload current run allure result to Artifacts
#        uses: actions/upload-artifact@v3
#        if: always()
#        with:
#          name: allure-result
#          path: allure-results
#          retention-days: 30
#
#  playwright-html-report:
#    name: Playwright HTML Report
#    needs: [ e2e-test ]
#    if: always()
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-node@v4
#        with:
#          node-version: '20'
#      - run: npm i
#
#      - name: Download playwright blob report from Previous job(s)
#        uses: actions/download-artifact@v3
#        with:
#          name: blob-report
#          path: blob-report
#
#      - name: Generate playwright report
#        run: npm run playwright-report
#
#      - name: Azure Login
#        uses: azure/login@v2
#        with:
#          creds: ${{ secrets.AZURE_CREDENTIALS }}
#
#      - name: Upload playwright report to Azure
#        uses: azure/cli@v2
#        with:
#          azcliversion: latest
#          inlineScript: |
#            az storage blob upload-batch --account-name mysimplewebsite -s ./playwright-report -d playwright --destination-path ${{github.event.pull_request.number}} --overwrite
#
#      - name: update job summary
#        if: always()
#        run: |
#          echo "# Deployed playwright report to https://mysimplewebsite.blob.core.windows.net/playwright/${{github.event.pull_request.number}}/index.html" >> $GITHUB_STEP_SUMMARY
#
#  generate-coverage-html-report:
#    name: Coverage HTML Report
#    needs: [ e2e-test ]
#    if: always()
#    runs-on: ubuntu-latest
#    # because NYC generate report with absolute path of source code mapping.
#    # We have to use same runner as report generated in above jobs
#    container:
#      image: mcr.microsoft.com/playwright:v1.41.0-jammy
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Download nyc report row data from Previous job(s)
#        uses: actions/download-artifact@v3
#        with:
#          name: e2e_nyc_output
#          path: e2e_nyc_output
#
#      - name: Generate coverage report
#        run: npm run coverage-report
#
#      - name: Upload playwright code coverage to Artifacts
#        uses: actions/upload-artifact@v3
#        if: always()
#        with:
#          name: coverage-e2e
#          path: coverage-e2e
#          retention-days: 30
#
#  publish-coverage-html-report:
#    name: Publish Coverage HTML Report
#    needs: [ generate-coverage-html-report ]
#    if: always()
#    runs-on: ubuntu-latest
#    steps:
#      - name: Download coverage report from Previous job
#        uses: actions/download-artifact@v3
#        with:
#          name: coverage-e2e
#          path: coverage-e2e
#
#      - name: Azure Login
#        uses: azure/login@v2
#        with:
#          client-id: ${{ secrets.AZURE_CLIENT_ID }}
#          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
#          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#
#      - name: Upload coverage report to Azure
#        uses: azure/cli@v2
#        with:
#          azcliversion: latest
#          inlineScript: |
#            az storage blob upload-batch --account-name mysimplewebsite -s ./coverage-e2e -d coverage --destination-path ${{github.event.pull_request.number}} --overwrite
#
#      - name: update job summary
#        if: always()
#        run: |
#          echo "# Deployed coverage report to https://mysimplewebsite.blob.core.windows.net/coverage/${{github.event.pull_request.number}}/index.html" >> $GITHUB_STEP_SUMMARY
#

  playwright-allure-report:
    # GitHub CLI is not available in playwright image container, so this needs a seperated job
    name: playwright-allure-report
#    needs: [ e2e-test ]
#    if: always()
    runs-on: ubuntu-latest
    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Setup Node
#        uses: actions/setup-node@v4
#        with:
#          node-version: 20
#
#      - name: Setup JDK
#        uses: actions/setup-java@v4.2.1
#        with:
#          distribution: 'microsoft'
#          java-version: '21'
#
#      - name: Install dependencies
#        run: npm i
#
#      - name: Download current run allure report from e2e test job
#        uses: actions/download-artifact@v3
#        with:
#          name: allure-result          # the artifact name uploaded
#          path: allure-results         # the folder name where artifact will be downloaded to

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Download previous allure report from Azure
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az storage blob download-batch --account-name mysimplewebsite -s allure-report --destination ./previous-allure-report
#
#      - name: Copy historical data into current run
#        run: cp previous-allure-report/history allure-results/history -r
#
#      - name: Generate allure report
#        run: npx allure generate allure-results
#
#      - name: Upload allure report to Azure
#        uses: azure/cli@v2
#        with:
#          azcliversion: latest
#          inlineScript: |
#            az storage blob upload-batch --account-name mysimplewebsite -s ./allure-report -d allure ---overwrite
#
#      - name: update job summary
#        if: always()
#        run: |
#          echo "# Deployed coverage report to https://mysimplewebsite.blob.core.windows.net/allure-report/index.html" >> $GITHUB_STEP_SUMMARY
#
#  elasticsearch-demo:
#    name: elasticsearch
#    needs: [ e2e-test ]
#    if: always()
#    runs-on: ubuntu-latest
#    steps:
#      - name: Configure sysctl limits
#        run: |
#          sudo swapoff -a
#          sudo sysctl -w vm.swappiness=1
#          sudo sysctl -w fs.file-max=262144
#          sudo sysctl -w vm.max_map_count=262144
#
#      - name: Runs Elasticsearch
#        uses: elastic/elastic-github-actions/elasticsearch@master
#        with:
#          stack-version: 8.2.0
#          security-enabled: false
#      - run: |
#          curl -X PUT "localhost:9200/heroes"
#
#      - run: |
#          curl -XPOST http://localhost:9200/heroes/doc -H "Content-Type: application/json" -d @test/heroes.json
#
#      - run: |
#         curl http://localhost:9200/heroes/_search?pretty=true&q=*:*
